// identification
let NAME = "avr"
let VERSION = "1.0"
let ARCH = "avr"
let BUILDER = "atmel"
let LICENSE = "GPL"
let COPYRIGHT = "University of Toulouse"
let YEAR = "2019"
let URL = ""

include "config.nmp"
include "BitTestInstructions.nmp"
//include "DTInstructions.nmp"
//include "CFInstructions.nmp"



op init()
	action = {

		// set SP
		SP = RAMEND;
		M[0x3D + 0x20] = RAMEND<7..0>;
		M[0x3E + 0x20] = RAMEND<15..8>;

		// set PC
		PC = 0;
	}

op instruction(x: all)
	syntax = x.syntax
	image = x.image
	action = {  x.action; }

op all =
	inst16

op inst16(x: all_inst16)
	syntax = x.syntax
	image = x.image
	action = {  PC = PC + 2; x.action; }

op all_inst16 =
	 LSL|LSR|ROL|ROR|ASR|SWAP|BLD|BST|SEC|CLC|SEN|CLN|SEZ|CLZ|SEI|CLI|SES|CLS|SEV|CLV|SET|CLT|SEH|CLH|SBI|CBI //bit instructions

//op inst32(x: all_inst32)
//	syntax = x.syntax
//	image = x.image
//	action = {  PC = PC + 4; x.action; }

//op all_inst32 =
//	  LDS | STS 
