// identification
let NAME = "avr.CFInstructions"
let VERSION = "1.0"
let ARCH = "avr"
let BUILDER = "atmel"
let LICENSE = "GPL"
let COPYRIGHT = "University of Toulouse"
let YEAR = "2019"
let URL = ""

////// Change of Flow Instructions //////

op RJMP(k: int(12))
	syntax = format("RJMP .%+d ; %04x", k*2, __IADDR + k*2 + 2)
	image = format("1100 %12b", k)
	action = {
		PC = PC + k*2;
	}

op RCALL(k: int(12))
	syntax = format("RCALL %d (%04x)", k*2, __IADDR + k*2 + 2)
	image = format("1101 %12b", k)
	action = {
		M[SP] = PC<7..0>;
		SP = SP - 1;
		M[SP] = PC<15..8>;
		SP = SP - 1;
		PC = PC + k*2;
	}

op RET()
	syntax = "RET"
	image = "1001 0101 0000 1000"
	action = {
		SP = SP + 1;
		PC<15..8> = M[SP];
		SP = SP + 1;
		PC<7..0> = M[SP];
	}

op CPC(d: rindex, r: rindex)
	syntax = format("CPC R%d, R%d", d, r)
	image = format("0000 01%1b %5b %4b", r<4..4>, d, r<3..0>)
	action = {
		let Rd = R[d];
		let Rr = R[r];
		let R = Rd - Rr - SREG_C;
		SREG_H = !Rd<3..3>&&Rr<3..3> || Rr<3..3>&&R<3..3> || R<3..3>&&!Rd<3..3>;
		SREG_V = Rd<7..7>&&!Rr<7..7>&&!R<7..7> || !Rd<7..7>&&Rr<7..7>&&R<7..7>;
		SREG_N = R<7..7>;
		SREG_Z = R == 0;
		SREG_C = !Rd<7..7>&&Rr<7..7> || Rr<7..7>&&R<7..7> || R<7..7>&&!Rd<7..7>;
		SREG_S = SREG_N ^ SREG_V;
	}

op CPI(d: card(4), k: card(8))
	syntax = format("CPI R%d, 0x%02x ; %d", d+16, k, k)
	image = format("0011 %4b %4b %4b", k<7..4>, d, k<3..0>)
	action = {
		let Rd = R[d + 16];
		let R = Rd - k;
		SREG_H = !Rd<3..3>&&k<3..3> || k<3..3>&&R<3..3> || R<3..3>&&!Rd<3..3>;
		SREG_V = Rd<7..7>&&!k<7..7>&&!R<7..7> || !Rd<7..7>&&k<7..7>&&R<7..7>;
		SREG_N = R<7..7>;
		SREG_Z = R == 0;
		SREG_C = !Rd<7..7>&&k<7..7> || k<7..7>&&R<7..7> || R<7..7>&&!Rd<7..7>;
		SREG_S = SREG_N ^ SREG_V;
	}

op BRNE(k: int(7))
	syntax = format("BRNE .%+d ; %+04x", k*2, __IADDR + 2 + k*2)
	image = format("1111 01 %7b 001", k)
	action = {
		if SREG_Z == 0 then PC = PC + k*2; endif;
	}

op BRLT(k: int(7))
	syntax = format("BRLT .%+d ; %+04x", k*2, __IADDR + 2 + k*2)
	image = format("1111 00 %7b 100", k)
	action = {
		if SREG_N ^ SREG_V == 1 then PC = PC + k*2; endif;
	}




